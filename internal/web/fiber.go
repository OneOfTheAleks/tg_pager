package web

import (
	"fmt"
	"github.com/gofiber/fiber/v2"
)

type WebServer struct {
	addr string
	port string
	app  *fiber.App
}

func New(addr string, port string) (*WebServer, error) {
	app := fiber.New()

	app.Get("/", func(c *fiber.Ctx) error {
		return c.SendString("Hello, World üëã!")
	})
	return &WebServer{
		addr: addr,
		port: port,
		app:  app,
	}, nil
}

func (w *WebServer) Start() error {
	// –°–æ–∑–¥–∞—ë–º –∫–∞–Ω–∞–ª –¥–ª—è –æ—à–∏–±–æ–∫
	errChan := make(chan error, 1)

	// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä –≤ –≥–æ—Ä—É—Ç–∏–Ω–µ
	go func() {
		if err := w.app.Listen(w.addr + ":" + w.port); err != nil {
			// –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ—ë –≤ –∫–∞–Ω–∞–ª
			fmt.Printf("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–µ—Ä–≤–µ—Ä–∞: %v\n", err)
			errChan <- fmt.Errorf("–æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–µ—Ä–≤–µ—Ä–∞: %v", err)
			return
		}
		close(errChan) // –ó–∞–∫—Ä—ã–≤–∞–µ–º –∫–∞–Ω–∞–ª, –µ—Å–ª–∏ –æ—à–∏–±–æ–∫ –Ω–µ—Ç
	}()

	// –ù–µ –∂–¥—ë–º –æ—à–∏–±–∫—É –∏–∑ –∫–∞–Ω–∞–ª–∞, –∞ —Å—Ä–∞–∑—É –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
	return nil
}

func (w *WebServer) Stop() error {
	return w.app.Shutdown()
}
